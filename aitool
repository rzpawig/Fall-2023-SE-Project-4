# HOW TO RUN
# GET ANY PYTHON COMPILER, PYCHARM PREFERED
# COPY AND PASTE CODE
# GO TO THE TERMINAL THROUGH COMPILER
# COPY AND PASTE THE FOLLOWING COMMANDS
# "pip install openai==0.28" and "pip install tk"
# THEN RUN CODE
# IN TEXT BOX COPY AND PASTE ANY STRING INPUT WITHIN 2000 CHARECTERS TO MAKE FLASHCARDS OUT OF OR SUMMARIZE

import tkinter as tk
import openai

#TYPE IN YOUR API KEY
api_key = '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'

def generate_flashcards():
    process_text("Can you make flashcards of the main points separated by a new line from the following text: {}")

def generate_summary():
    process_text("Can you provide a summary of the following text: {}")

def process_text(prompt_template):
    # Get text from the entry widget
    extracted_text = entry.get()

    # Text prompt to send to the GPT-3 model
    prompt = prompt_template.format(extracted_text)

    # Call the OpenAI API to generate text
    response = openai.Completion.create(
        engine="text-davinci-003",  # GPT-3 engine
        prompt=prompt,
        max_tokens=500,  # Adjust this as needed
        api_key=api_key
    )

    # Extract and update the label with the generated text
    generated_text = response.choices[0].text
    result_label.config(text=generated_text)

#Create the main window
root = tk.Tk()
root.title("Text Processing App")

#Create widgets
label = tk.Label(root, text="Enter the text you want to process:")
entry = tk.Entry(root, width=50)
flashcards_button = tk.Button(root, text="Generate Flashcards", command=generate_flashcards)
summary_button = tk.Button(root, text="Generate Summary", command=generate_summary)
result_label = tk.Label(root, text="Processed text will be displayed here")

#Organize widgets with geometry manager
label.pack(pady=10)
entry.pack(pady=10)
flashcards_button.pack(pady=5)
summary_button.pack(pady=5)
result_label.pack(pady=10)

#Start the main event loop
root.mainloop()
